---
- name: Deploy uv worker with tmux
  hosts: worker_hosts
  vars:
    git_repo: "https://github.com/Sejmou/orchestration.git"
    clone_path: "~/prefect-orchestration"
    uv_prefect_command: '~/.local/bin/uv sync --package setup && ~/.local/bin/uv run prefect worker start --pool "Docker" --work-queue "default" --limit 1'

  tasks:
    - name: Check if uv executable exists
      ansible.builtin.stat:
        path: "~/.local/bin/uv"
      register: uv_stat

    - name: Install uv if not installed
      ansible.builtin.shell: "curl -LsSf https://astral.sh/uv/install.sh | sh"
      when: not uv_stat.stat.exists

    - name: Setup Git Repo
      ansible.builtin.git:
        repo: "{{ git_repo }}"
        dest: "{{ clone_path }}"
        version: reorganization-workspaces
        update: yes

    - name: Run uv sync for package setup
      ansible.builtin.shell: "~/.local/bin/uv sync --package setup"
      args:
        chdir: "{{ clone_path }}"

    - name: Copy local .env file to remote clone path
      ansible.builtin.copy:
        src: "./.env"
        dest: "{{ clone_path }}/.env"
        mode: '0644'

    - name: Check if uv_worker tmux session exists
      ansible.builtin.shell: "tmux has-session -t uv_worker"
      register: tmux_session_check
      ignore_errors: true

    - name: Kill existing uv_worker tmux session if it exists
      ansible.builtin.shell: "tmux kill-session -t uv_worker"
      when: tmux_session_check.rc == 0

    - name: Create uv_worker tmux session running uv_prefect_command
      ansible.builtin.shell: 'tmux new-session -d -s uv_worker "{{ uv_prefect_command }}"'
      when: tmux_session_check.rc != 0
      args:
        chdir: "{{ clone_path }}"
